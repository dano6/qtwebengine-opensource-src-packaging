--- a/src/core/ozone/gl_ozone_egl_qt.cpp
+++ b/src/core/ozone/gl_ozone_egl_qt.cpp
@@ -54,6 +54,7 @@
 
 #include <EGL/egl.h>
 #include <dlfcn.h>
+#include "/usr/include/hybris/common/dlfcn.h"
 
 #include <QtGui/qtgui-config.h> // for QT_NO_OPENGL
 
@@ -78,7 +79,7 @@ base::NativeLibrary LoadLibrary(const ba
 
 bool GLOzoneEGLQt::LoadGLES2Bindings(gl::GLImplementation /*implementation*/)
 {
-    base::NativeLibrary eglgles2Library = dlopen(NULL, RTLD_LAZY);
+    base::NativeLibrary eglgles2Library = hybris_dlopen("libEGL.so", RTLD_LAZY);
     if (!eglgles2Library) {
         LOG(ERROR) << "Failed to open EGL/GLES2 context " << dlerror();
         return false;
@@ -86,17 +87,8 @@ bool GLOzoneEGLQt::LoadGLES2Bindings(gl:
 
     gl::GLGetProcAddressProc get_proc_address =
             reinterpret_cast<gl::GLGetProcAddressProc>(
-                base::GetFunctionPointerFromNativeLibrary(eglgles2Library,
+                hybris_dlsym(eglgles2Library,
                                                           "eglGetProcAddress"));
-#ifndef QT_NO_OPENGL
-    if (!get_proc_address) {
-        // QTBUG-63341 most likely libgles2 not linked with libegl -> fallback to qpa
-        if (QOpenGLContext *context = qt_gl_global_share_context()) {
-            get_proc_address = reinterpret_cast<gl::GLGetProcAddressProc>(
-                context->getProcAddress("eglGetProcAddress"));
-        }
-    }
-#endif
 
     if (!get_proc_address) {
         LOG(ERROR) << "eglGetProcAddress not found.";
--- a/src/core/core_common.pri
+++ b/src/core/core_common.pri
@@ -18,3 +18,5 @@ CONFIG -= ltcg
 # Chromium requires C++14
 CONFIG += c++14
 
+# add lib hybris-common
+LIBS += -lhybris-common
